{
    "openapi": "3.0.0",
    "info": {
        "title": "SOAPP Documentaci√≥n",
        "description": "Salud Ocupacional APP",
        "contact": {
            "email": "daruiza@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8080/api",
            "description": "SOAPP API Server"
        }
    ],
    "paths": {
        "/activity/index": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Get All Activity",
                "description": "Return Activity",
                "operationId": "getActivity",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activity/store": {
            "post": {
                "tags": [
                    "Activity"
                ],
                "summary": "Store A Activity",
                "description": "Store Activity",
                "operationId": "StoreActivity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activity/update/{id}": {
            "put": {
                "tags": [
                    "Activity"
                ],
                "summary": "Update One Activity By one Id",
                "description": "Update One Activity",
                "operationId": "getUpdateActivityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activity/destroy/{id}": {
            "delete": {
                "tags": [
                    "Activity"
                ],
                "summary": "Delete One Activity By one Id",
                "description": "Delete One Activity",
                "operationId": "getDestroyActivityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activity/showbyreportid/{id}": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Get One Activity By one Id",
                "description": "Return One Activity",
                "operationId": "getActivityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activityevidence/store": {
            "post": {
                "tags": [
                    "ActivityEvidence"
                ],
                "summary": "Store Report",
                "description": "Store Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityEvidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activityevidence/showbyactivityevidenceid/{id}": {
            "get": {
                "tags": [
                    "ActivityEvidence"
                ],
                "summary": "Get One ActivityEvidence",
                "description": "Return Commerce",
                "operationId": "get ActivityEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "training sst evedence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activityevidence/showbyactivityid/{id}": {
            "get": {
                "tags": [
                    "ActivityEvidence"
                ],
                "summary": "Get One ActivityEvidence",
                "description": "Return Commerce",
                "operationId": "get ActivityEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Training SST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activityevidence/update/{id}": {
            "put": {
                "tags": [
                    "ActivityEvidence"
                ],
                "summary": "Update One ActivityEvidence By one Id",
                "description": "Update One ActivityEvidence",
                "operationId": "getUpdateEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ActivityEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvidenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/activityevidence/destroy/{id}": {
            "delete": {
                "tags": [
                    "ActivityEvidence"
                ],
                "summary": "Delete One ActivityEvidence By one Id",
                "description": "Delete One ActivityEvidence",
                "operationId": "getDestroyEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ActivityEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get User Token",
                "description": "Return Token",
                "operationId": "getToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "GetOut",
                "description": "Close session",
                "operationId": "87f34df7a8880c90b2728d9ab78fd564",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/auth/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get User Auth",
                "description": "Return User",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/commerce/index": {
            "get": {
                "tags": [
                    "Commerce"
                ],
                "summary": "Get All Commerces",
                "description": "Return Commerces",
                "operationId": "getAllCommerces",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Commerce Name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nit",
                        "in": "query",
                        "description": "Commerce nit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "department",
                        "in": "query",
                        "description": "Commerce department",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Commerce city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Commerce User",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/commerce/store": {
            "post": {
                "tags": [
                    "Commerce"
                ],
                "summary": "Store Commerce",
                "description": "Store Commerce",
                "operationId": "storeCommerce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Commerce"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/commerce/showbyuserid/{id}": {
            "get": {
                "tags": [
                    "Commerce"
                ],
                "summary": "Get One Commerce",
                "description": "Return Commerce",
                "operationId": "get Commerce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/commerce/showbycommerceid/{id}": {
            "get": {
                "tags": [
                    "Commerce"
                ],
                "summary": "Get One Commerce By one Id",
                "description": "Return One Commerce",
                "operationId": "getCommerceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commerce Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/commerce/update/{id}": {
            "put": {
                "tags": [
                    "Commerce"
                ],
                "summary": "Update One Commerce By one Id",
                "description": "Update One Commerce",
                "operationId": "getUpdateCommerceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commerce Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Commerce"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/commerce/destroy/{id}": {
            "delete": {
                "tags": [
                    "Commerce"
                ],
                "summary": "Delete One Commerce By one Id",
                "description": "Delete One Commerce",
                "operationId": "getDestroyCommerceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commerce Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromise/index": {
            "get": {
                "tags": [
                    "Compromise"
                ],
                "summary": "Get All Compromise",
                "description": "Return Compromise",
                "operationId": "getCompromise",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromise/store": {
            "post": {
                "tags": [
                    "Compromise"
                ],
                "summary": "Store A Compromise",
                "description": "Store Compromise",
                "operationId": "StoreCompromise",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compromise"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromise/update/{id}": {
            "put": {
                "tags": [
                    "Compromise"
                ],
                "summary": "Update One Compromise By one Id",
                "description": "Update One Compromise",
                "operationId": "getUpdateCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compromise"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromise/destroy/{id}": {
            "delete": {
                "tags": [
                    "Compromise"
                ],
                "summary": "Delete One Compromise By one Id",
                "description": "Delete One Compromise",
                "operationId": "getDestroyCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromise/showbyreportid/{id}": {
            "get": {
                "tags": [
                    "Compromise"
                ],
                "summary": "Get One Compromise By one Id",
                "description": "Return One Compromise",
                "operationId": "getCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromiseevidence/store": {
            "post": {
                "tags": [
                    "CompromiseEvidence"
                ],
                "summary": "Store Report",
                "description": "Store Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompromiseEvidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromiseevidence/showbycompromiseevidenceid/{id}": {
            "get": {
                "tags": [
                    "CompromiseEvidence"
                ],
                "summary": "Get One CompromiseEvidence",
                "description": "Return Commerce",
                "operationId": "get CompromiseEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "training sst evedence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromiseevidence/showbycompromiseid/{id}": {
            "get": {
                "tags": [
                    "CompromiseEvidence"
                ],
                "summary": "Get One CompromiseEvidence",
                "description": "Return Commerce",
                "operationId": "get ComromiseEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Training SST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromiseevidence/update/{id}": {
            "put": {
                "tags": [
                    "CompromiseEvidence"
                ],
                "summary": "Update One CompromiseEvidence By one Id",
                "description": "Update One CompromiseEvidence",
                "operationId": "getUpdateEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompromiseEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvidenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromiseevidence/destroy/{id}": {
            "delete": {
                "tags": [
                    "CompromiseEvidence"
                ],
                "summary": "Delete One CompromiseEvidence By one Id",
                "description": "Delete One CompromiseEvidence",
                "operationId": "getDestroyEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompromiseEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersst/index": {
            "get": {
                "tags": [
                    "CompromiseRSST"
                ],
                "summary": "Get All Compromise",
                "description": "Return Compromise",
                "operationId": "getCompromise",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersst/store": {
            "post": {
                "tags": [
                    "CompromiseRSST"
                ],
                "summary": "Store A Compromise",
                "description": "Store Compromise",
                "operationId": "StoreCompromise",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompromiseRSST"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersst/update/{id}": {
            "put": {
                "tags": [
                    "CompromiseRSST"
                ],
                "summary": "Update One Compromise By one Id",
                "description": "Update One Compromise",
                "operationId": "getUpdateCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompromiseRSST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompromiseRSST"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersst/destroy/{id}": {
            "delete": {
                "tags": [
                    "CompromiseRSST"
                ],
                "summary": "Delete One Compromise By one Id",
                "description": "Delete One Compromise",
                "operationId": "getDestroyCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersst/showbyreportid/{id}": {
            "get": {
                "tags": [
                    "CompromiseRSST"
                ],
                "summary": "Get One Compromise By one Id",
                "description": "Return One Compromise",
                "operationId": "getCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersstevidence/store": {
            "post": {
                "tags": [
                    "CompromiseRSSTEvidence"
                ],
                "summary": "Store Report",
                "description": "Store Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompromiseEvidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersstevidence/showbycompromiseevidenceid/{id}": {
            "get": {
                "tags": [
                    "CompromiseRSSTEvidence"
                ],
                "summary": "Get One CompromiseEvidence",
                "description": "Return Commerce",
                "operationId": "get CompromiseEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "training sst evedence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersstevidence/showbycompromiseid/{id}": {
            "get": {
                "tags": [
                    "CompromiseRSSTEvidence"
                ],
                "summary": "Get One CompromiseEvidence",
                "description": "Return Commerce",
                "operationId": "get ComromiseEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Training SST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersstevidence/update/{id}": {
            "put": {
                "tags": [
                    "CompromiseRSSTEvidence"
                ],
                "summary": "Update One CompromiseEvidence By one Id",
                "description": "Update One CompromiseEvidence",
                "operationId": "getUpdateEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompromiseEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvidenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisersstevidence/destroy/{id}": {
            "delete": {
                "tags": [
                    "CompromiseRSSTEvidence"
                ],
                "summary": "Delete One CompromiseEvidence By one Id",
                "description": "Delete One CompromiseEvidence",
                "operationId": "getDestroyEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompromiseEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesst/index": {
            "get": {
                "tags": [
                    "CompromiseSST"
                ],
                "summary": "Get All Compromise",
                "description": "Return Compromise",
                "operationId": "getCompromise",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesst/store": {
            "post": {
                "tags": [
                    "CompromiseSST"
                ],
                "summary": "Store A Compromise",
                "description": "Store Compromise",
                "operationId": "StoreCompromise",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compromise"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesst/update/{id}": {
            "put": {
                "tags": [
                    "CompromiseSST"
                ],
                "summary": "Update One Compromise By one Id",
                "description": "Update One Compromise",
                "operationId": "getUpdateCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compromise"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesst/destroy/{id}": {
            "delete": {
                "tags": [
                    "CompromiseSST"
                ],
                "summary": "Delete One Compromise By one Id",
                "description": "Delete One Compromise",
                "operationId": "getDestroyCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesst/showbyreportid/{id}": {
            "get": {
                "tags": [
                    "CompromiseSST"
                ],
                "summary": "Get One Compromise By one Id",
                "description": "Return One Compromise",
                "operationId": "getCompromiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compromise Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesstevidence/store": {
            "post": {
                "tags": [
                    "CompromiseSSTEvidence"
                ],
                "summary": "Store Report",
                "description": "Store Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompromiseEvidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesstevidence/showbycompromiseevidenceid/{id}": {
            "get": {
                "tags": [
                    "CompromiseSSTEvidence"
                ],
                "summary": "Get One CompromiseEvidence",
                "description": "Return Commerce",
                "operationId": "get CompromiseEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "training sst evedence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesstevidence/showbycompromiseid/{id}": {
            "get": {
                "tags": [
                    "CompromiseSSTEvidence"
                ],
                "summary": "Get One CompromiseEvidence",
                "description": "Return Commerce",
                "operationId": "get ComromiseEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Training SST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesstevidence/update/{id}": {
            "put": {
                "tags": [
                    "CompromiseSSTEvidence"
                ],
                "summary": "Update One CompromiseEvidence By one Id",
                "description": "Update One CompromiseEvidence",
                "operationId": "getUpdateEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompromiseEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvidenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/compromisesstevidence/destroy/{id}": {
            "delete": {
                "tags": [
                    "CompromiseSSTEvidence"
                ],
                "summary": "Delete One CompromiseEvidence By one Id",
                "description": "Delete One CompromiseEvidence",
                "operationId": "getDestroyEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompromiseEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employee/index": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get All Employees",
                "description": "Return Employees",
                "operationId": "getAllEmployees",
                "parameters": [
                    {
                        "name": "commerce_id",
                        "in": "query",
                        "description": "Employee Commerce Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "identification",
                        "in": "query",
                        "description": "Employee Identification",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identification_type",
                        "in": "query",
                        "description": "Employee Tipo Identification",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Employee Name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "description": "Employee LastName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Employee Phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Employee Email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "adress",
                        "in": "query",
                        "description": "Employee Adress",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "Employee BirthDate",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_employee",
                        "in": "query",
                        "description": "Employee isEmployee",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "employee_state",
                        "in": "query",
                        "description": "Employee State",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employee/store": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Store Employee",
                "description": "Store Employee",
                "operationId": "storeEmployees",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Employee"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employee/showbyemployeeid/{id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get One Employee By one Id",
                "description": "Return One Employee",
                "operationId": "getEmployeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employee/update/{id}": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "summary": "Update One Employee By one Id",
                "description": "Update One Employee",
                "operationId": "getUpdateEmployeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employee/destroy/{id}": {
            "delete": {
                "tags": [
                    "Employee"
                ],
                "summary": "Delete One Employee By one Id",
                "description": "Delete One Employee",
                "operationId": "getDestroyEmployeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employeereport/store": {
            "post": {
                "tags": [
                    "Employee Report"
                ],
                "summary": "Store Employee Report",
                "description": "Store Employee Report",
                "operationId": "storeEmployees",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeReport"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employeereport/update/{id}": {
            "put": {
                "tags": [
                    "Employee Report"
                ],
                "summary": "Update Employee Report",
                "description": "Update Employee Report",
                "operationId": "updateEmployees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Report Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeReport"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/employeereport/destroy/{id}": {
            "delete": {
                "tags": [
                    "Employee Report"
                ],
                "summary": "Delete One Employee Report By one Id",
                "description": "Delete One Employee Report",
                "operationId": "getDestroyEmployeeReportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Report Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/evidence/store": {
            "post": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Store Report",
                "description": "Store Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Evidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/evidence/showbyevidenceid/{id}": {
            "get": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Get One Evidence",
                "description": "Return Commerce",
                "operationId": "get Evidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Evidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/evidence/showbyempoyeereportid/{id}": {
            "get": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Get One Evidence",
                "description": "Return Commerce",
                "operationId": "get Evidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Report Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/evidence/update/{id}": {
            "put": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Update One Evidence By one Id",
                "description": "Update One Evidence",
                "operationId": "getUpdateEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Evidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvidenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/evidence/destroy/{id}": {
            "delete": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Delete One Evidence By one Id",
                "description": "Delete One Evidence",
                "operationId": "getDestroyEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Evidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/generallist/index": {
            "get": {
                "tags": [
                    "generallist"
                ],
                "summary": "Get All General List",
                "description": "Return General List",
                "operationId": "getGenarallist",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/generallist/showbyid/{id}": {
            "get": {
                "tags": [
                    "generallist"
                ],
                "summary": "Get one General List By Id",
                "description": "Return one General List",
                "operationId": "get General List By Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "General List Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/generallist/showbyname": {
            "get": {
                "tags": [
                    "generallist"
                ],
                "summary": "Get General List By Name",
                "description": "Return General List",
                "operationId": "get General List By Name",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "General List Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/generallist/showbynamelist": {
            "get": {
                "tags": [
                    "generallist"
                ],
                "summary": "Get General List By Name",
                "description": "Return General List",
                "operationId": "get General List By Name List",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "General List Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/generallist/store": {
            "post": {
                "tags": [
                    "generallist"
                ],
                "summary": "Store General List",
                "description": "Store General List",
                "operationId": "store General List",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeneralList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/generallist/destroy/{id}": {
            "delete": {
                "tags": [
                    "generallist"
                ],
                "summary": "Delete One General List By one Id",
                "description": "Delete One General List",
                "operationId": "DestroyGeneralListById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "General List Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/generallist/update/{id}": {
            "put": {
                "tags": [
                    "generallist"
                ],
                "summary": "Update One General List By one Id",
                "description": "Update One General List",
                "operationId": "UpdateGeneralListById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "General List Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeneralList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsst/index": {
            "get": {
                "tags": [
                    "InspectionRSST"
                ],
                "summary": "Get All Inspection",
                "description": "Return Inspection",
                "operationId": "getInspection",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsst/store": {
            "post": {
                "tags": [
                    "InspectionRSST"
                ],
                "summary": "Store A Inspection",
                "description": "Store Inspection",
                "operationId": "StoreInspection",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InspectionRSST"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsst/update/{id}": {
            "put": {
                "tags": [
                    "InspectionRSST"
                ],
                "summary": "Update One Inspection By one Id",
                "description": "Update One Inspection",
                "operationId": "getUpdateInspectionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inspection Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InspectionRSST"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsst/destroy/{id}": {
            "delete": {
                "tags": [
                    "InspectionRSST"
                ],
                "summary": "Delete One Inspection By one Id",
                "description": "Delete One Inspection",
                "operationId": "getDestroyInspectionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inspection Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsst/showbyreportid/{id}": {
            "get": {
                "tags": [
                    "InspectionRSST"
                ],
                "summary": "Get One Inspection By one Id",
                "description": "Return One Inspection",
                "operationId": "getInspectionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inspection Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsstevidence/store": {
            "post": {
                "tags": [
                    "InspectionRSSTEvidence"
                ],
                "summary": "Store Inspection Report",
                "description": "Store Inspection Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InspectionEvidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsstevidence/showbyinspectionevidenceid/{id}": {
            "get": {
                "tags": [
                    "InspectionRSSTEvidence"
                ],
                "summary": "Get One InspectionEvidence",
                "description": "Return Commerce",
                "operationId": "get InspectionEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "training sst evedence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsstevidence/showbyinspectionid/{id}": {
            "get": {
                "tags": [
                    "InspectionRSSTEvidence"
                ],
                "summary": "Get One InspectionEvidence",
                "description": "Return Commerce",
                "operationId": "get ComromiseEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Training SST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsstevidence/update/{id}": {
            "put": {
                "tags": [
                    "InspectionRSSTEvidence"
                ],
                "summary": "Update One InspectionEvidence By one Id",
                "description": "Update One InspectionEvidence",
                "operationId": "getUpdateEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "InspectionEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvidenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/inspectionrsstevidence/destroy/{id}": {
            "delete": {
                "tags": [
                    "InspectionRSSTEvidence"
                ],
                "summary": "Delete One InspectionEvidence By one Id",
                "description": "Delete One InspectionEvidence",
                "operationId": "getDestroyEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "InspectionEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/report/index": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get All Reports",
                "description": "Return Reports",
                "operationId": "getAllReports",
                "parameters": [
                    {
                        "name": "commerce_id",
                        "in": "query",
                        "description": "Report commerce_id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Report year",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Report month",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/report/store": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Store Report",
                "description": "Store Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Report"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/report/showbyreportid/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get One Report By one Id",
                "description": "Return One Report",
                "operationId": "getReportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/report/update/{id}": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update One Report By one Id",
                "description": "Update One Report",
                "operationId": "getUpdateReportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Report"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/report/destroy/{id}": {
            "delete": {
                "tags": [
                    "Report"
                ],
                "summary": "Delete One Report By one Id",
                "description": "Delete One Report",
                "operationId": "getDestroyReportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/rol/index": {
            "get": {
                "tags": [
                    "rol"
                ],
                "summary": "Get All Rols",
                "description": "Return Rols",
                "operationId": "getRols",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsst/index": {
            "get": {
                "tags": [
                    "TrainingSST"
                ],
                "summary": "Get All Training",
                "description": "Return Training",
                "operationId": "getTraining",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsst/store": {
            "post": {
                "tags": [
                    "TrainingSST"
                ],
                "summary": "Store A Training",
                "description": "Store Training",
                "operationId": "StoreTraining",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trainingsst"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsst/update/{id}": {
            "put": {
                "tags": [
                    "TrainingSST"
                ],
                "summary": "Update One TrainingSST By one Id",
                "description": "Update One TrainingSST",
                "operationId": "getUpdateTrainingSSTById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TrainingSST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trainingsst"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsst/destroy/{id}": {
            "delete": {
                "tags": [
                    "TrainingSST"
                ],
                "summary": "Delete One TrainingSST By one Id",
                "description": "Delete One TrainingSST",
                "operationId": "getDestroyTrainingSSTById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TrainingSST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsst/showbyreportid/{id}": {
            "get": {
                "tags": [
                    "TrainingSST"
                ],
                "summary": "Get One TrainingSST By one Id",
                "description": "Return One TrainingSST",
                "operationId": "getTrainingSSTById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TrainingSST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsstevidence/store": {
            "post": {
                "tags": [
                    "TrainingsstEvidence"
                ],
                "summary": "Store Report",
                "description": "Store Report",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrainingsstEvidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsstevidence/showbytrainingsstevidenceid/{id}": {
            "get": {
                "tags": [
                    "TrainingsstEvidence"
                ],
                "summary": "Get One TrainingsstEvidence",
                "description": "Return Commerce",
                "operationId": "get TrainingsstEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "training sst evedence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsstevidence/showbytrainingsstid/{id}": {
            "get": {
                "tags": [
                    "TrainingsstEvidence"
                ],
                "summary": "Get One TrainingsstEvidence",
                "description": "Return Commerce",
                "operationId": "get TrainingsstEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Training SST Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsstevidence/update/{id}": {
            "put": {
                "tags": [
                    "TrainingsstEvidence"
                ],
                "summary": "Update One TrainingsstEvidence By one Id",
                "description": "Update One TrainingsstEvidence",
                "operationId": "getUpdateEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TrainingsstEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvidenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/trainingsstevidence/destroy/{id}": {
            "delete": {
                "tags": [
                    "TrainingsstEvidence"
                ],
                "summary": "Delete One TrainingsstEvidence By one Id",
                "description": "Delete One TrainingsstEvidence",
                "operationId": "getDestroyEvidenceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TrainingsstEvidence Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/upload/photo": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Get User Photo url",
                "description": "Return Url Photo",
                "operationId": "push User Photo",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/upload/downloadfile": {
            "get": {
                "tags": [
                    "Upload"
                ],
                "summary": "Download file by url",
                "description": "Download a File",
                "operationId": "download File",
                "parameters": [
                    {
                        "name": "path",
                        "in": "query",
                        "description": "File path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "File name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/upload/getfile": {
            "get": {
                "tags": [
                    "Upload"
                ],
                "summary": "Get file by url",
                "description": "Return a File",
                "operationId": "get File",
                "parameters": [
                    {
                        "name": "path",
                        "in": "query",
                        "description": "File path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/index": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get All Users",
                "description": "Return Users",
                "operationId": "getAllUser",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User Name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "description": "User Lastname",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "User Phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User Email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rol_id",
                        "in": "query",
                        "description": "User Rol",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/showbyuserid/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get One User By one Id",
                "description": "Return One User",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/showbyrolid/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get One User By one Rol Id",
                "description": "Return One User with Rol",
                "operationId": "getUserByRolId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rol Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/store": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Store User",
                "description": "Store User",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserStore"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/update": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update User",
                "description": "update User",
                "operationId": "UpdateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/updateid/{id}": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update User",
                "description": "update User",
                "operationId": "UpdateUserId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/destroy/{id}": {
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete One user By one UserId",
                "description": "Delete One user",
                "operationId": "getUserId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Activity": {
                "title": "Activity",
                "description": "Training body data",
                "properties": {
                    "activity": {
                        "title": "activity",
                        "description": "Activity",
                        "type": "string",
                        "example": "Otra Actividad"
                    },
                    "date": {
                        "title": "date",
                        "description": "date of the Training SST",
                        "type": "string",
                        "format": "date",
                        "example": "2023-09-01"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approvedg Training SST",
                        "type": "boolean",
                        "example": 0
                    },
                    "report_id": {
                        "title": "report_id",
                        "description": "report_id of the Training SST",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ActivityEvidence": {
                "title": "Evidence",
                "description": "Evidence body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the evidence",
                        "type": "string",
                        "example": "FileName"
                    },
                    "file": {
                        "title": "file",
                        "description": "File of the evidence",
                        "type": "string",
                        "example": "FileHostingName"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type File",
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approved of the evidence",
                        "type": "boolean",
                        "example": true
                    },
                    "trainingsst_id": {
                        "title": "trainingsst_id",
                        "description": "trainingsst_id of the Evidence",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Commerce": {
                "title": "Commerce",
                "description": "Commerce body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the commerce",
                        "type": "string",
                        "example": "TempoSolutions"
                    },
                    "nit": {
                        "title": "nit",
                        "description": "Nit of the Commerce",
                        "type": "string",
                        "example": "1039420535-3"
                    },
                    "department": {
                        "title": "department",
                        "description": "Department of the commerce",
                        "type": "string",
                        "example": "Antioquia"
                    },
                    "city": {
                        "title": "city",
                        "description": "Name of the commerce",
                        "type": "string",
                        "example": "Medellin"
                    },
                    "adress": {
                        "title": "adress",
                        "description": "adress of the commerce",
                        "type": "string",
                        "example": "Cll 60 # 75 - 150"
                    },
                    "description": {
                        "title": "description",
                        "description": "description of the commerce",
                        "type": "string",
                        "example": "super"
                    },
                    "logo": {
                        "title": "logo",
                        "description": "Logo of the commerce",
                        "type": "string",
                        "example": "default.png"
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "user_id of the commerce",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Compromise": {
                "title": "Compromise",
                "description": "Compromise body data",
                "properties": {
                    "item": {
                        "title": "item",
                        "description": "Item de Compromiso",
                        "type": "string",
                        "example": "4.15"
                    },
                    "rule": {
                        "title": "rule",
                        "description": "Norma de Compromiso",
                        "type": "string",
                        "example": "SGI"
                    },
                    "name": {
                        "title": "name",
                        "description": "Nombre de Compromiso",
                        "type": "string",
                        "example": "Responsable de SGT"
                    },
                    "detail": {
                        "title": "detail",
                        "description": "Detalle de Compromiso",
                        "type": "string",
                        "example": "ACTAS DE CONTROL INTERNO"
                    },
                    "canon": {
                        "title": "canon",
                        "description": "Criterio de Compromiso",
                        "type": "boolean",
                        "example": true
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approvedg Training SST",
                        "type": "boolean",
                        "example": 0
                    },
                    "dateinit": {
                        "title": "dateinit",
                        "description": "Fecha de apertura",
                        "type": "string",
                        "format": "date",
                        "example": "2023-09-01"
                    },
                    "dateclose": {
                        "title": "dateclose",
                        "description": "Fecha de cierre",
                        "type": "string",
                        "format": "date",
                        "example": "2023-09-30"
                    },
                    "report_id": {
                        "title": "report_id",
                        "description": "report_id of the Compromisw SST",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "CompromiseEvidence": {
                "title": "Evidence",
                "description": "Evidence body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the evidence",
                        "type": "string",
                        "example": "FileName"
                    },
                    "file": {
                        "title": "file",
                        "description": "File of the evidence",
                        "type": "string",
                        "example": "FileHostingName"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type File",
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approved of the evidence",
                        "type": "boolean",
                        "example": true
                    },
                    "compromise_id": {
                        "title": "compromise_id",
                        "description": "compromise_id of the Evidence",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "CompromiseRSST": {
                "title": "CompromiseRSST",
                "description": "CompromiseRSST body data",
                "properties": {
                    "item": {
                        "title": "item",
                        "description": "Item de Compromiso",
                        "type": "string",
                        "example": "4.15"
                    },
                    "rule": {
                        "title": "rule",
                        "description": "Norma de Compromiso",
                        "type": "string",
                        "example": "SGI"
                    },
                    "name": {
                        "title": "name",
                        "description": "Nombre de Compromiso",
                        "type": "string",
                        "example": "Responsable de SGT"
                    },
                    "detail": {
                        "title": "detail",
                        "description": "Detalle de Compromiso",
                        "type": "string",
                        "example": "ACTAS DE CONTROL INTERNO"
                    },
                    "recommendations": {
                        "title": "recommendations",
                        "description": "Recomendaciones de Compromiso",
                        "type": "string",
                        "example": "RECOMENDACION"
                    },
                    "canon": {
                        "title": "canon",
                        "description": "Criterio de Compromiso",
                        "type": "boolean",
                        "example": true
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approvedg Training SST",
                        "type": "boolean",
                        "example": 0
                    },
                    "dateinit": {
                        "title": "dateinit",
                        "description": "Fecha de apertura",
                        "type": "string",
                        "format": "date",
                        "example": "2023-09-01"
                    },
                    "dateclose": {
                        "title": "dateclose",
                        "description": "Fecha de cierre",
                        "type": "string",
                        "format": "date",
                        "example": "2023-09-30"
                    },
                    "report_id": {
                        "title": "report_id",
                        "description": "report_id of the Training SST",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Employee": {
                "title": "Employee",
                "description": "Employee body data",
                "properties": {
                    "identification": {
                        "title": "identification",
                        "description": "Identification of the Employee",
                        "type": "string",
                        "example": "1039420535"
                    },
                    "identification_type": {
                        "title": "identification_type",
                        "description": "identification_type of the Employee",
                        "type": "string",
                        "example": "Cedula de Ciudadania"
                    },
                    "name": {
                        "title": "name",
                        "description": "Name of the Employee",
                        "type": "string",
                        "example": "David"
                    },
                    "lastname": {
                        "title": "lastname",
                        "description": "Lastname of the Employee",
                        "type": "string",
                        "example": "Ruiz"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the Employee",
                        "type": "string",
                        "example": "super@yopmail.com"
                    },
                    "birth_date": {
                        "title": "birth_date",
                        "description": "Birth_Date of the Employee",
                        "type": "string",
                        "format": "date",
                        "example": "2022-01-01"
                    },
                    "adress": {
                        "title": "adress",
                        "description": "adress of the Employee",
                        "type": "string",
                        "example": "Cll 60 # 75 - 150"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone of the Employee",
                        "example": 3194062550
                    },
                    "photo": {
                        "title": "photo",
                        "description": "photo of the user",
                        "type": "string",
                        "example": "avatar"
                    },
                    "eps": {
                        "title": "eps",
                        "description": "eps of the user",
                        "type": "string",
                        "example": "SURA"
                    },
                    "commerce_id": {
                        "title": "commerce_id",
                        "description": "commerce_id of the Employee",
                        "example": 1
                    },
                    "is_employee": {
                        "title": "is_employee",
                        "description": "is_employee of the user",
                        "type": "boolean",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "EmployeeIndex": {
                "title": "EmployeeIndex",
                "description": "Employee body data Index",
                "properties": {
                    "employee_state": {
                        "title": "employee_state",
                        "description": "employee_state of the Employee",
                        "type": "object",
                        "example": "[10,23,45]"
                    }
                },
                "type": "object"
            },
            "EmployeeReport": {
                "title": "EmployeeReport",
                "description": "EmployeeReport body data",
                "properties": {
                    "attributes": {
                        "title": "attributes",
                        "description": "attributes of the EmployeeReport",
                        "type": "object",
                        "example": "{}"
                    },
                    "employee_state": {
                        "title": "employee_state",
                        "description": "employee_state of the Employee",
                        "type": "string",
                        "example": "Pendiente"
                    },
                    "employee_id": {
                        "title": "employee_id",
                        "description": "employee_id of the Employee",
                        "example": 1
                    },
                    "report_id": {
                        "title": "report_id",
                        "description": "report_id of the Report",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "EmployeeUpdate": {
                "title": "EmployeeUpdate",
                "description": "EmployeeUpdate body data",
                "properties": {
                    "identification": {
                        "title": "identification",
                        "description": "Identification of the Employee",
                        "type": "string",
                        "example": "1039420535"
                    },
                    "identification_type": {
                        "title": "identification_type",
                        "description": "identification_type of the Employee",
                        "type": "string",
                        "example": "Cedula de Ciudadania"
                    },
                    "name": {
                        "title": "name",
                        "description": "Name of the Employee",
                        "type": "string",
                        "example": "David"
                    },
                    "lastname": {
                        "title": "lastname",
                        "description": "Lastname of the Employee",
                        "type": "string",
                        "example": "Ruiz"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the Employee",
                        "type": "string",
                        "example": "super@yopmail.com"
                    },
                    "birth_date": {
                        "title": "birth_date",
                        "description": "Birth_Date of the Employee",
                        "type": "string",
                        "format": "date",
                        "example": "2022-01-01"
                    },
                    "adress": {
                        "title": "adress",
                        "description": "adress of the Employee",
                        "type": "string",
                        "example": "Cll 60 # 75 - 150"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone of the Employee",
                        "example": 3194062550
                    },
                    "photo": {
                        "title": "photo",
                        "description": "photo of the user",
                        "type": "string",
                        "example": "avatar"
                    },
                    "commerce_id": {
                        "title": "commerce_id",
                        "description": "commerce_id of the Employee",
                        "example": 1
                    },
                    "is_employee": {
                        "title": "is_employee",
                        "description": "is_employee of the user",
                        "type": "boolean",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Evidence": {
                "title": "Evidence",
                "description": "Evidence body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the evidence",
                        "type": "string",
                        "example": "FileName"
                    },
                    "file": {
                        "title": "file",
                        "description": "File of the evidence",
                        "type": "string",
                        "example": "FileHostingName"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type File",
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approved of the evidence",
                        "type": "boolean",
                        "example": true
                    },
                    "employee_report_id": {
                        "title": "employee_report_id",
                        "description": "employee_report_id of the Evidence",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "EvidenceUpdate": {
                "title": "EvidenceUpdate",
                "description": "EvidenceUpdate body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the evidence",
                        "type": "string",
                        "example": "FileName"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type File",
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approved of the evidence",
                        "type": "boolean",
                        "example": 1
                    },
                    "employee_report_id": {
                        "title": "employee_report_id",
                        "description": "employee_report_id of the Evidence",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "GeneralList": {
                "title": "GeneralList",
                "description": "GeneralList body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the General List",
                        "type": "string",
                        "example": "Sexo"
                    },
                    "value": {
                        "title": "value",
                        "description": "value of the General List",
                        "type": "string",
                        "example": "Femenino"
                    }
                },
                "type": "object"
            },
            "InspectionEvidence": {
                "title": "Evidence",
                "description": "Evidence body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the evidence",
                        "type": "string",
                        "example": "FileName"
                    },
                    "file": {
                        "title": "file",
                        "description": "File of the evidence",
                        "type": "string",
                        "example": "FileHostingName"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type File",
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approved of the evidence",
                        "type": "boolean",
                        "example": true
                    },
                    "inspection_id": {
                        "title": "inspection_id",
                        "description": "inspection_id of the Evidence",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "InspectionRSST": {
                "title": "InspectionRSST",
                "description": "InspectionRSST body data",
                "properties": {
                    "work": {
                        "title": "work",
                        "description": "Obra/Frente/Area de Inspecci√≥n",
                        "type": "string",
                        "example": "Administraci√≥n"
                    },
                    "machines": {
                        "title": "machines",
                        "description": "Maquinas y Equi√≥ de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "vehicles": {
                        "title": "vehicles",
                        "description": "Vehiculos de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "tools": {
                        "title": "tools",
                        "description": "Herramientas de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "epp": {
                        "title": "epp",
                        "description": "EPP de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "cleanliness": {
                        "title": "cleanliness",
                        "description": "Orden y Aseo de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "chemicals": {
                        "title": "chemicals",
                        "description": "Sustancias Quimicas de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "risk_work": {
                        "title": "risk_work",
                        "description": "Trabajos de Ato Riesgo de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "emergency_item": {
                        "title": "emergency_item",
                        "description": "Elementos de emergencia de la Inspecci√≥n",
                        "type": "boolean",
                        "example": "0"
                    },
                    "other": {
                        "title": "other",
                        "description": "Otra Inspecci√≥n",
                        "type": "string",
                        "example": null
                    },
                    "report_id": {
                        "title": "report_id",
                        "description": "report_id of the Inspection SST",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Report": {
                "title": "Report",
                "description": "Report body data",
                "properties": {
                    "project": {
                        "title": "project",
                        "description": "project of the Report",
                        "type": "string",
                        "example": "Caida"
                    },
                    "responsible": {
                        "title": "responsible",
                        "description": "Responsible of the Report",
                        "type": "string",
                        "example": "CAIDAD"
                    },
                    "email_responsible": {
                        "title": "email_responsible",
                        "description": "email_responsible of the Report",
                        "type": "string",
                        "example": "david@gmail.com"
                    },
                    "phone_responsible": {
                        "title": "phone_responsible",
                        "description": "phone_responsible of the Report",
                        "type": "string",
                        "example": "123456789"
                    },
                    "date": {
                        "title": "date",
                        "description": "date of the Report",
                        "type": "string",
                        "format": "date",
                        "example": "2020-01-01"
                    },
                    "commerce_id": {
                        "title": "commerce_id",
                        "description": "commerce_id of the Report",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Trainingsst": {
                "title": "Trainingsst",
                "description": "Training body data",
                "properties": {
                    "topic": {
                        "title": "topic",
                        "description": "Topic of the Training SST",
                        "type": "string",
                        "example": "Educaci√≥n Organizacional"
                    },
                    "date": {
                        "title": "date",
                        "description": "date of the Training SST",
                        "type": "string",
                        "format": "date",
                        "example": "2023-09-01"
                    },
                    "hours": {
                        "title": "hours",
                        "description": "how long was the Training SST",
                        "type": "number",
                        "example": "0"
                    },
                    "assistants": {
                        "title": "assistants",
                        "description": "how many was in the Training SST",
                        "example": "0"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approvedg Training SST",
                        "type": "boolean",
                        "example": 0
                    },
                    "report_id": {
                        "title": "report_id",
                        "description": "report_id of the Training SST",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "TrainingsstEvidence": {
                "title": "Evidence",
                "description": "Evidence body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the evidence",
                        "type": "string",
                        "example": "FileName"
                    },
                    "file": {
                        "title": "file",
                        "description": "File of the evidence",
                        "type": "string",
                        "example": "FileHostingName"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type File",
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "approved": {
                        "title": "approved",
                        "description": "approved of the evidence",
                        "type": "boolean",
                        "example": true
                    },
                    "trainingsst_id": {
                        "title": "trainingsst_id",
                        "description": "trainingsst_id of the Evidence",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Upload": {
                "title": "Upload",
                "description": "Upload body data",
                "properties": {
                    "folder": {
                        "title": "folder",
                        "description": "Ubication Image",
                        "type": "string",
                        "example": ""
                    },
                    "file": {
                        "title": "file",
                        "description": "File to Upload",
                        "type": "file"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the user",
                        "type": "string",
                        "example": "super-admin"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "superadmin@yopmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "0000"
                    }
                },
                "type": "object"
            },
            "UserStore": {
                "title": "UserStore",
                "description": "User body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the user",
                        "type": "string",
                        "example": "super"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "super@yopmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "0000"
                    },
                    "lastname": {
                        "title": "lastname",
                        "description": "Lastname of the user",
                        "type": "string",
                        "example": "LastName"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone of the user",
                        "example": 3194062550
                    },
                    "theme": {
                        "title": "theme",
                        "description": "theme of the user",
                        "type": "string",
                        "example": "red"
                    },
                    "photo": {
                        "title": "photo",
                        "description": "photo of the user",
                        "type": "string",
                        "example": "avatar"
                    },
                    "rol_id": {
                        "title": "rol_id",
                        "description": "rol_id of the user",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UserUpdate": {
                "title": "UserUpdate",
                "description": "UserUpdate body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the user",
                        "type": "string",
                        "example": "super"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "super@yopmail.com"
                    },
                    "lastname": {
                        "title": "lastname",
                        "description": "Lastname of the user",
                        "type": "string",
                        "example": "LastName"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone of the user",
                        "example": 3194062550
                    },
                    "theme": {
                        "title": "theme",
                        "description": "theme of the user",
                        "type": "string",
                        "example": "blue"
                    },
                    "photo": {
                        "title": "photo",
                        "description": "photo of the user",
                        "type": "string",
                        "example": "avatar"
                    },
                    "rol_id": {
                        "title": "rol_id",
                        "description": "rol_id of the user",
                        "example": 1
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API EndPoints of Auth"
        }
    ]
}